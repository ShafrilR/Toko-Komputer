{"ast":null,"code":"var _jsxFileName = \"E:\\\\XI RPL\\\\Code\\\\Node JS\\\\toko-komputer\\\\frontend\\\\admin-toko-komputer\\\\src\\\\pages\\\\Customer.js\";\nimport React from \"react\";\nimport Navbar from \"../components/Navbar\";\nimport ProductList from \"../components/ProductList\";\nimport { base_url, product_image_url } from \"../config.js\";\nimport $ from \"jquery\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Customer extends React.Component {\n  constructor() {\n    super();\n\n    this.headerConfig = () => {\n      let header = {\n        headers: {\n          Authorization: `Bearer ${this.state.token}`\n        }\n      };\n      return header;\n    };\n\n    this.getCustomers = () => {\n      let url = base_url + \"/customer\";\n      axios.get(url, this.headerConfig()).then(response => {\n        this.setState({\n          customers: response.data\n        });\n      }).catch(error => {\n        if (error.response) {\n          if (error.response.status) {\n            window.alert(error.response.data.message);\n            this.props.history.push(\"/login\");\n          }\n        } else {\n          console.log(error);\n        }\n      });\n    };\n\n    this.state = {\n      customers: [],\n      token: \"\",\n      action: \"\",\n      name: \"\",\n      phone: \"\",\n      address: \"\",\n      image: \"\",\n      username: \"\",\n      password: \"\",\n      uploadFile: true,\n      fillPassword: true,\n      customer_id: \"\"\n    };\n\n    if (localStorage.getItem(\"token\")) {\n      this.state.token = localStorage.getItem(\"token\");\n    } else {\n      window.location = \"/login\";\n    }\n\n    this.headerConfig.bind(this);\n  }\n\n  componentDidMount() {\n    this.getCustomers();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-bold text-info mt-2\",\n          children: \"Customer List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: this.state.customers.map(item => /*#__PURE__*/_jsxDEV(CustomerList, {\n            name: item.name,\n            phone: item.phone,\n            address: item.address,\n            image: customer_image_url + \"/\" + item.image,\n            onEdit: () => this.Edit(item),\n            onDrop: () => this.dropCustomer(item)\n          }, item.customer_id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 28\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-success\",\n          onClick: () => this.Add(),\n          children: \"Add Customer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 20\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal fade\",\n        id: \"modal_customer\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-dialog\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"modal-header bg-info text-white\",\n              children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Form Customer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 34\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 30\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"modal-body\",\n              children: /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: ev => this.saveCustomer(ev),\n                children: [\"Customer Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: \"form-control mb-1\",\n                  value: this.state.name,\n                  onChange: ev => this.setState({\n                    name: ev.target.value\n                  }),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 38\n                }, this), \"Customer Phone\", /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: \"form-control mb-1\",\n                  value: this.state.phone,\n                  onChange: ev => this.setState({\n                    phone: ev.target.value\n                  }),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 38\n                }, this), \"Customer Address\", /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: \"form-control mb-1\",\n                  value: this.state.address,\n                  onChange: ev => this.setState({\n                    address: ev.target.value\n                  }),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 38\n                }, this), \"Username\", /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: \"form-control mb-1\",\n                  value: this.state.username,\n                  onChange: ev => this.setState({\n                    username: ev.target.value\n                  }),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 38\n                }, this), this.state.action === \"update\" && this.state.uploadFile === false ? /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-sm btn-dark mb-1 btn-block\",\n                  onClick: () => this.setState({\n                    uploadFile: true\n                  }),\n                  children: \"Change Customer Image\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 41\n                }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [\"Customer Image\", /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"file\",\n                    className: \"form-control mb-1\",\n                    onChange: ev => this.setState({\n                      image: ev.target.files[0]\n                    }),\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 130,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 41\n                }, this), this.state.action === \"update\" && this.state.fillPassword === false ? /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-sm btn-secondary mb-1 btn-block\",\n                  onClick: () => this.setState({\n                    fillPassword: true\n                  }),\n                  children: \"Change Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 41\n                }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [\"Password\", /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"password\",\n                    className: \"form-control mb-1\",\n                    value: this.state.password,\n                    onChange: ev => this.setState({\n                      password: ev.target.value\n                    }),\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 145,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  className: \"btn btn-block btn-success\",\n                  children: \"Simpan\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 152,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 34\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 30\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 26\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["E:/XI RPL/Code/Node JS/toko-komputer/frontend/admin-toko-komputer/src/pages/Customer.js"],"names":["React","Navbar","ProductList","base_url","product_image_url","$","axios","Customer","Component","constructor","headerConfig","header","headers","Authorization","state","token","getCustomers","url","get","then","response","setState","customers","data","catch","error","status","window","alert","message","props","history","push","console","log","action","name","phone","address","image","username","password","uploadFile","fillPassword","customer_id","localStorage","getItem","location","bind","componentDidMount","render","map","item","customer_image_url","Edit","dropCustomer","Add","ev","saveCustomer","target","value","files"],"mappings":"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","sourcesContent":["import React from \"react\"\r\nimport Navbar from \"../components/Navbar\"\r\nimport ProductList from \"../components/ProductList\"\r\nimport { base_url, product_image_url } from \"../config.js\";\r\nimport $ from \"jquery\"\r\nimport axios from \"axios\"\r\n\r\n\r\nexport default class Customer extends React.Component{\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            customers: [],\r\n            token: \"\",\r\n            action: \"\",\r\n            name: \"\",\r\n            phone: \"\",\r\n            address: \"\",\r\n            image: \"\",\r\n            username: \"\",\r\n            password: \"\",\r\n            uploadFile: true,\r\n            fillPassword: true,\r\n            customer_id: \"\",\r\n        }\r\n\r\n        if (localStorage.getItem(\"token\")) {\r\n            this.state.token = localStorage.getItem(\"token\")\r\n        } else {\r\n            window.location = \"/login\"\r\n        }\r\n        this.headerConfig.bind(this)\r\n    }\r\n\r\n    headerConfig = () => {\r\n        let header = {\r\n            headers: { Authorization: `Bearer ${this.state.token}` }\r\n        }\r\n        return header\r\n    }\r\n\r\n    getCustomers = () => {\r\n        let url = base_url + \"/customer\"\r\n        axios.get(url, this.headerConfig())\r\n        .then(response=> {\r\n            this.setState({customers: response.data})\r\n        })\r\n        .catch(error => {\r\n            if (error.response) {\r\n                if(error.response.status) {\r\n                    window.alert(error.response.data.message)\r\n                    this.props.history.push(\"/login\")\r\n                }\r\n            }else{\r\n                console.log(error);\r\n            }\r\n        })\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getCustomers()\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n               <Navbar />\r\n               <div className=\"container\">\r\n                   <h3 className=\"text-bold text-info mt-2\">Customer List</h3>\r\n                   <div className=\"row\">\r\n                       { this.state.customers.map( item => (\r\n                           <CustomerList\r\n                           key = {item.customer_id}\r\n                           name = {item.name}\r\n                           phone = {item.phone}\r\n                           address = {item.address}\r\n                           image = { customer_image_url + \"/\" + item.image}\r\n                           onEdit = {() => this.Edit(item)}\r\n                           onDrop = {() => this.dropCustomer(item)}\r\n                            />\r\n                       )) }\r\n                   </div>\r\n                   <button className=\"btn btn-success\" onClick={() => this.Add()}>\r\n                       Add Customer\r\n                   </button>\r\n                </div>\r\n\r\n                 {/* modal customer  */}\r\n                 <div className=\"modal fade\" id=\"modal_customer\">\r\n                     <div className=\"modal-dialog\">\r\n                         <div className=\"modal-content\">\r\n                             <div className=\"modal-header bg-info text-white\">\r\n                                 <h4>Form Customer</h4>\r\n                             </div>\r\n                             <div className=\"modal-body\">\r\n                                 <form onSubmit={ev => this.saveCustomer(ev)}>\r\n                                     Customer Name\r\n                                     <input type=\"text\" className=\"form-control mb-1\"\r\n                                     value={this.state.name}\r\n                                     onChange={ev => this.setState({name: ev.target.value})}\r\n                                     required\r\n                                     />\r\n                                    Customer Phone\r\n                                     <input type=\"text\" className=\"form-control mb-1\"\r\n                                     value={this.state.phone}\r\n                                     onChange={ev => this.setState({phone: ev.target.value})}\r\n                                     required\r\n                                     />\r\n                                    Customer Address\r\n                                     <input type=\"text\" className=\"form-control mb-1\"\r\n                                     value={this.state.address}\r\n                                     onChange={ev => this.setState({address: ev.target.value})}\r\n                                     required\r\n                                     />\r\n                                    Username\r\n                                     <input type=\"text\" className=\"form-control mb-1\"\r\n                                     value={this.state.username}\r\n                                     onChange={ev => this.setState({username: ev.target.value})}\r\n                                     required\r\n                                     />\r\n\r\n                                    { this.state.action === \"update\" && this.state.uploadFile === false ? (\r\n                                        <button className=\"btn btn-sm btn-dark mb-1 btn-block\"\r\n                                        onClick={() => this.setState({uploadFile: true})}>\r\n                                            Change Customer Image\r\n                                        </button>\r\n                                    ) : (\r\n                                        <div>\r\n                                            Customer Image\r\n                                            <input type=\"file\" className=\"form-control mb-1\"\r\n                                            onChange={ev => this.setState({image: ev.target.files[0]})}\r\n                                            required\r\n                                            />\r\n                                        </div>\r\n                                    ) }\r\n\r\n                                    { this.state.action === \"update\" && this.state.fillPassword === false ? (\r\n                                        <button className=\"btn btn-sm btn-secondary mb-1 btn-block\"\r\n                                        onClick={() => this.setState({fillPassword: true})}>\r\n                                            Change Password\r\n                                        </button>\r\n                                    ) : (\r\n                                        <div>\r\n                                            Password\r\n                                            <input type=\"password\" className=\"form-control mb-1\"\r\n                                            value={this.state.password}\r\n                                            onChange={ev => this.setState({password: ev.target.value})}\r\n                                            required\r\n                                            />\r\n                                        </div>\r\n                                    ) }\r\n                                    <button type=\"submit\" className=\"btn btn-block btn-success\">\r\n                                        Simpan\r\n                                    </button>\r\n                                 </form>\r\n                             </div>\r\n                         </div>\r\n                     </div>\r\n                 </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}