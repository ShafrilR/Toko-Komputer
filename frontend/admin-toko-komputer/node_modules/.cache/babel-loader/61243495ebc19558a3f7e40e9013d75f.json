{"ast":null,"code":"var _jsxFileName = \"E:\\\\XI RPL\\\\Code\\\\Node JS\\\\toko-komputer\\\\frontend\\\\admin-toko-komputer\\\\src\\\\pages\\\\Admin.js\";\nimport React from \"react\";\nimport Navbar from \"../components/Navbar\";\nimport axios from \"axios\";\nimport { base_url } from \"../config\";\nimport $ from \"jquery\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Admin extends React.Component {\n  constructor() {\n    super();\n\n    this.headerConfig = () => {\n      let header = {\n        headers: {\n          Authorization: `Bearer ${this.state.token}`\n        }\n      };\n      return header;\n    };\n\n    this.getAdmins = () => {\n      let url = base_url + \"/admin\";\n      axios.get(url, this.headerConfig()).then(response => {\n        this.setState({\n          admins: response.data\n        });\n      }).catch(error => {\n        if (error.response) {\n          if (error.response.status) {\n            window.alert(error.response.data.message);\n            this.props.history.push(\"/login\");\n          }\n        } else {\n          console.log(error);\n        }\n      });\n    };\n\n    this.state = {\n      token: \"\",\n      action: \"\",\n      admins: [],\n      admin_id: \"\",\n      name: \"\",\n      username: \"\",\n      password: \"\",\n      fillPassword: true\n    };\n\n    if (localStorage.getItem(\"token\")) {\n      this.state.token = localStorage.getItem(\"token\");\n    } else {\n      window.location = \"/login\";\n    }\n  }\n\n  componentDidMount() {\n    this.getAdmins();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-bold text-info mt-2\",\n          children: \"Admin List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-bordered\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"#\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Username\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Option\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: this.state.admins.map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: index + 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-sm btn-info m-1\",\n                  onClick: () => this.Edit(item),\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-sm btn-danger m-1\",\n                  onClick: () => this.dropAdmin(item),\n                  children: \"Hapus\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 37\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-success\",\n          onClick: () => this.Add(),\n          children: \"Add Admin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal fade\",\n          id: \"modal_admin\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-dialog\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"modal-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"modal-header bg-info text-white\",\n                children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: \"Form Admin\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"modal-body\",\n                children: /*#__PURE__*/_jsxDEV(\"form\", {\n                  onSubmit: ev => this.saveAdmin(ev),\n                  children: [\"Admin Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    className: \"form-control mb-1\",\n                    value: this.state.name,\n                    onChange: ev => this.setState({\n                      name: ev.target.value\n                    }),\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 105,\n                    columnNumber: 41\n                  }, this), \"Username\", /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    className: \"form-control mb-1\",\n                    value: this.state.username,\n                    onChange: ev => this.setState({\n                      username: ev.target.value\n                    }),\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 112,\n                    columnNumber: 41\n                  }, this), this.state.action === \"update\" && this.state.fillPassword === false ? /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn btn-sm btn-secondary mb-1 btn-block\",\n                    onClick: () => this.setState({\n                      fillPassword: true\n                    }),\n                    children: \"Change Password\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 119,\n                    columnNumber: 45\n                  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [\"Password\", /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"password\",\n                      className: \"form-control mb-1\",\n                      value: this.state.password,\n                      onChange: ev => this.setState({\n                        password: ev.target.value\n                      }),\n                      required: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 126,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 124,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"submit\",\n                    className: \"btn btn-block btn-success\",\n                    children: \"Simpan\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 134,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["E:/XI RPL/Code/Node JS/toko-komputer/frontend/admin-toko-komputer/src/pages/Admin.js"],"names":["React","Navbar","axios","base_url","$","Admin","Component","constructor","headerConfig","header","headers","Authorization","state","token","getAdmins","url","get","then","response","setState","admins","data","catch","error","status","window","alert","message","props","history","push","console","log","action","admin_id","name","username","password","fillPassword","localStorage","getItem","location","componentDidMount","render","map","item","index","Edit","dropAdmin","Add","ev","saveAdmin","target","value"],"mappings":"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","sourcesContent":["import React from \"react\"\r\nimport Navbar from \"../components/Navbar\"\r\nimport axios from \"axios\"\r\nimport { base_url } from \"../config\"\r\nimport $ from \"jquery\"\r\n\r\nexport default class Admin extends React.Component{\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            token: \"\",\r\n            action: \"\",\r\n            admins: [],\r\n            admin_id: \"\",\r\n            name: \"\",\r\n            username: \"\",\r\n            password: \"\",\r\n            fillPassword: true\r\n        }\r\n        if(localStorage.getItem(\"token\")){\r\n            this.state.token = localStorage.getItem(\"token\")\r\n        }else{\r\n            window.location = \"/login\"\r\n        }\r\n    }\r\n\r\n    headerConfig = () => {\r\n        let header = {\r\n            headers: { Authorization: `Bearer ${this.state.token}` }\r\n        }\r\n        return header\r\n    }\r\n\r\n    getAdmins = () => {\r\n        let url = base_url + \"/admin\"\r\n        axios.get(url, this.headerConfig())\r\n        .then(response=> {\r\n            this.setState({admins: response.data})\r\n        })\r\n        .catch(error => {\r\n            if (error.response) {\r\n                if(error.response.status) {\r\n                    window.alert(error.response.data.message)\r\n                    this.props.history.push(\"/login\")\r\n                }\r\n            }else{\r\n                console.log(error);\r\n            }\r\n        })\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getAdmins()\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <Navbar />\r\n                <div className=\"container\">\r\n                    <h3 className=\"text-bold text-info mt-2\">Admin List</h3>\r\n                    <table className=\"table table-bordered\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>#</th>\r\n                                <th>Name</th>\r\n                                <th>Username</th>\r\n                                <th>Option</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {this.state.admins.map((item, index) => (\r\n                                <tr key={index}>\r\n                                    <td>{index+1}</td>\r\n                                    <td>{item.name}</td>\r\n                                    <td>{item.username}</td>\r\n                                    <td>\r\n                                        <button className=\"btn btn-sm btn-info m-1\"\r\n                                        onClick={() => this.Edit(item)}>\r\n                                            Edit\r\n                                        </button>\r\n\r\n                                        <button className=\"btn btn-sm btn-danger m-1\"\r\n                                        onClick={() => this.dropAdmin(item)}>\r\n                                            Hapus\r\n                                        </button>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                    <button className=\"btn btn-success\" onClick={() => this.Add()}>\r\n                       Add Admin\r\n                    </button>\r\n                    {/* modal admin  */}\r\n                    <div className=\"modal fade\" id=\"modal_admin\">\r\n                        <div className=\"modal-dialog\">\r\n                            <div className=\"modal-content\">\r\n                                <div className=\"modal-header bg-info text-white\">\r\n                                    <h4>Form Admin</h4>\r\n                                </div>\r\n                                <div className=\"modal-body\">\r\n                                    <form onSubmit={ev => this.saveAdmin(ev)}>\r\n                                        Admin Name\r\n                                        <input type=\"text\" className=\"form-control mb-1\"\r\n                                        value={this.state.name}\r\n                                        onChange={ev => this.setState({name: ev.target.value})}\r\n                                        required\r\n                                        />\r\n\r\n                                        Username\r\n                                        <input type=\"text\" className=\"form-control mb-1\"\r\n                                        value={this.state.username}\r\n                                        onChange={ev => this.setState({username: ev.target.value})}\r\n                                        required\r\n                                        />\r\n\r\n                                        { this.state.action === \"update\" && this.state.fillPassword === false ? (\r\n                                            <button className=\"btn btn-sm btn-secondary mb-1 btn-block\"\r\n                                            onClick={() => this.setState({fillPassword: true})}>\r\n                                                Change Password\r\n                                            </button>\r\n                                        ) : (\r\n                                            <div>\r\n                                                Password\r\n                                                <input type=\"password\" className=\"form-control mb-1\"\r\n                                                value={this.state.password}\r\n                                                onChange={ev => this.setState({password: ev.target.value})}\r\n                                                required\r\n                                                />\r\n                                            </div>\r\n                                        ) }\r\n\r\n                                        <button type=\"submit\" className=\"btn btn-block btn-success\">\r\n                                            Simpan\r\n                                        </button>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}